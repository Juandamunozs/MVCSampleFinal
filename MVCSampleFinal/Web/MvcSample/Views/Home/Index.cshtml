<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Página de Productos</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet"> <!-- Para los íconos de Material -->

    <style>
        /* Estilos personalizados */
        body {
            background-color: #f8f9fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        h1.display-4 {
            margin-bottom: 30px;
        }

        form {
            margin: 20px 0;
            padding: 20px;
            background-color: #ffffff;
            border-radius: 10px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        }

        form input {
            margin-bottom: 15px;
        }

        #productos-lista {
            margin-top: 20px;
        }

        #productos-lista div {
            background-color: #ffffff;
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 8px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        #productos-lista p {
            margin: 0;
        }

        button {
            margin-left: 10px;
        }

        .edit-icon {
            vertical-align: middle;
        }

        a {
            text-decoration: none;
        }

        a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="container text-center">
        <h1 class="display-4">Bienvenido a la Gestión de Productos</h1>

        <!-- Enlace para listar productos -->
        <a asp-controller="Productos" asp-action="Index" class="btn btn-primary mb-4">
            <i class="material-icons edit-icon">mode_edit</i> Ver Productos
        </a>

        <!-- Formulario para agregar o editar un producto -->
        <h2 id="form-title">Agregar Producto</h2>
        <form id="add-producto-form" class="needs-validation" novalidate>
            <div class="mb-3">
                <input type="text" id="nombre" class="form-control" placeholder="Nombre del Producto" required />
                <div class="invalid-feedback">
                    Por favor ingresa un nombre.
                </div>
            </div>
            <div class="mb-3">
                <input type="number" id="precio" class="form-control" placeholder="Precio del Producto" required />
                <div class="invalid-feedback">
                    Por favor ingresa un precio válido.
                </div>
            </div>
            <button type="submit" id="submit-button" class="btn btn-success w-100">Agregar Producto</button>
        </form>

        <div id="productos-lista"></div> <!-- Aquí se mostrarán los productos -->

    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        let isUpdating = false;  // Bandera para indicar si se está en modo actualización
        let productoId = null;  // ID del producto que se va a actualizar

        // Función para cargar productos
        async function cargarProductos() {
            try {
                const response = await fetch('/api/productos');
                if (!response.ok) throw new Error('Error al cargar los productos');
                const productos = await response.json();

                const listaDiv = document.getElementById('productos-lista');
                listaDiv.innerHTML = '<h3>Lista de Productos:</h3>';

                productos.forEach(producto => {
                    listaDiv.innerHTML += `
                                <div>
                                    <p>${producto.nombre} - $${producto.precio} - Stock: ${producto.stock}</p>
                                    <button class="btn btn-warning" onclick="editarProducto('${producto.id}', '${producto.nombre}', ${producto.precio})">Editar</button>
                                    <button class="btn btn-danger" onclick="eliminarProducto('${producto.id}')">Eliminar</button>
                                </div>`;
                });
            } catch (error) {
                alert(error.message);
            }
        }

        // Función para manejar la edición de un producto
        function editarProducto(id, nombre, precio) {
            // Cambiar el formulario a modo de actualización
            isUpdating = true;
            productoId = id;

            // Llenar los campos con los valores actuales del producto
            document.getElementById('nombre').value = nombre;
            document.getElementById('precio').value = precio;

            // Cambiar la apariencia del formulario
            document.getElementById('form-title').innerText = 'Actualizar Producto';
            document.getElementById('submit-button').innerText = 'Actualizar Producto';
        }

        // Función para eliminar un producto
        async function eliminarProducto(id) {
            if (!confirm('¿Estás seguro de que deseas eliminar este producto?')) return;

            try {
                const response = await fetch(`/api/productos/${id}`, {
                    method: 'DELETE',
                });

                if (!response.ok) throw new Error('Error al eliminar el producto');

                alert('Producto eliminado con éxito');
                cargarProductos(); // Recargar la lista de productos
            } catch (error) {
                alert(error.message);
            }
        }

        // Manejar el envío del formulario para agregar o actualizar un producto
        document.getElementById('add-producto-form').addEventListener('submit', async function(e) {
            e.preventDefault(); // Evita el comportamiento por defecto del formulario

            const nombre = document.getElementById('nombre').value;
            const precio = document.getElementById('precio').value;

            if (isUpdating) {
                // Si estamos en modo actualización
                try {
                    const response = await fetch(`/api/productos/${productoId}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ id: productoId, nombre, precio })
                    });

                    if (!response.ok) throw new Error('Error al actualizar el producto');

                    alert('Producto actualizado con éxito');
                    isUpdating = false; // Reiniciar la bandera de actualización
                    productoId = null;  // Reiniciar el ID
                    document.getElementById('form-title').innerText = 'Agregar Producto';
                    document.getElementById('submit-button').innerText = 'Agregar Producto';
                    document.getElementById('add-producto-form').reset(); // Limpiar el formulario
                    cargarProductos(); // Recargar la lista de productos
                } catch (error) {
                    alert(error.message);
                }
            } else {
                // Si estamos en modo creación
                try {
                    const response = await fetch('/api/productos', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ nombre, precio }) // Enviar los valores del nuevo producto
                    });

                    if (!response.ok) throw new Error('Error al agregar el producto');

                    alert('Producto agregado con éxito');
                    document.getElementById('add-producto-form').reset(); // Limpiar el formulario
                    cargarProductos(); // Recargar la lista de productos
                } catch (error) {
                    alert(error.message);
                }
            }
        });

        // Cargar productos al inicio
        window.onload = cargarProductos;
    </script>
</body>
</html>
